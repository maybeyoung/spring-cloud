

雪崩效应

解决方案：
    1.超时机制
    2.断路器模式

   断路器要实现需要的些什么，题外话：
      1.监控：总共请求多少次，有多少次失败 假设失败率达到10%%，断路器打开
      2.断路器状态
      3.分流
      4.自我修复（断路器状态对的切换）
      5.也需要超时机制

启动项加@EnableCircuitBreaker

方法加@HystrixCommand(fallbackMethod ="xxxx" )
        返回的方法参数和返回值要和原方法一致


#第一次请求直接进入fallback方法，由于hystrix默认为1秒引起的
# hystrix:
    #command:
      #default:
        #execution:
          #timeout:
           #enabled: false    方法1

# hystrix:
    #command:
      #default:
        #execution:
          #isolation:
           #thread:
            #timeoutInMilliseconds: 5000  方法2

@HystrixCommand(fallbackMethod = "findByidFallback", commandProperties = {@HystrixProperty(name="execution.isolation.strategy", value="SEMAPHORE")})
和调用的方法会在一个线程里运行   value默认是THREAD

要使用/health必须加入下面这个依赖
<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

../hystrix.stream 监控

feign使用hystrix 的fallback
在接口加上@FeignClient(name="xxxx",fallback = HystrixClientFallback.class)
HystrixClientFallback必须继承这个接口，还要加@Component注解

禁用单个feignClient的hystrix
在自定义配置里加这个方法，@FeignClient(name="microservice-provider-user",configuration = Feign3Configuration.class,fallback = HystrixClientFallback.class)
@Configuration
public class Feign3Configuration {
    @Bean
	@Scope("prototype")
	public Feign.Builder feignBuilder() {
		return Feign.builder();
	}
}

fallbackFactory 不能与fallback放在一起

dashboard 监控一个

Turbine 可以监控一个集群

turbine:
  aggregator:  #请求地址为http://my.turbine.sever:8080/turbine.stream?cluster=CUSTOMERS
    clusterConfig: CUSTOMERS //这个要写spring.application.name的名称
  appConfig: customers #集群项目名称
-------------
turbine:
  aggregator:
    clusterConfig: default #写这个地址后面就不用跟?后面的，http://my.turbine.sever:8080/turbine.stream
  appConfig:  microservice-comsumer-movie-ribbon-with-Hystrix #要监控的集群
  clusterNameExpression: "'default'"

如果server配置了context-path
 例如  server:
         context-path: /ribbon
 那需要配置eureka.instance.home-page-url-path
       eureka:
         instance:
           home-page-url-path: /ribbon

查看日志turbine监控日志
logging:
    level:
      root: INFO
      com.netflix.turbine.monitor: DEBUG
